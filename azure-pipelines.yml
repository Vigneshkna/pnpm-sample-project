# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      npm install -g @cyclonedx/cdxgen
      cdxgen -o bom.json
      cat bom.json
      wget https://github.com/devops-kung-fu/bomber/releases/download/v0.4.4/bomber_0.4.4_linux_amd64.deb
      sudo dpkg -i bomber_0.4.4_linux_amd64.deb
      ls -lrt
      bomber scan --provider snyk --token $(SNYK_TOKEN) bom.json
  displayName: 'Bomber'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
       npm install -g pnpm
       pnpm audit
       rm -rf node_modules
       ls -lrt
       npm install
       ls -lrt
  displayName: 'pnpm-audit'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo "----------Download Latest Snyk CLI-----------"
              curl -Lo ./snyk "https://github.com/snyk/snyk/releases/download/v1.1060.0/snyk-linux"
              chmod +x snyk
              ls -lrt
              echo "----------Authenticating Snyk-----------"
              ./snyk auth $(SNYK_TOKEN)
              echo "----------Snyk Scanning-----------"
              ./snyk test --file=package.json
              echo "----------Snyk Monitor------------"
#              ./snyk monitor --all-projects
  displayName: 'Workaround 1'
- task: SnykSecurityScan@1
  inputs:
    serviceConnectionEndpoint: 'Snyk Service Connections'
    testType: 'app'
    monitorWhen: 'always'
    failOnIssues: true
  displayName: 'Snykscan'